---
# roles/common/tasks/main.yml

- name: Update and upgrade apt packages
  ansible.builtin.apt:
    upgrade: dist
    update_cache: yes

- name: Open required ports
  ansible.builtin.iptables:
    chain: INPUT
    protocol: "{{ item.protocol }}"
    destination_port: "{{ item.port }}"
    jump: ACCEPT
  with_items:
    - { protocol: 'tcp', port: 6443 }
    - { protocol: 'udp', port: 8472 }
    - { protocol: 'udp', port: 4789 }

- name: Install essential packages
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Add Docker's GPG key
  ansible.builtin.shell:
    cmd: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    creates: /usr/share/keyrings/docker-archive-keyring.gpg

- name: Configure Docker APT repository
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    line: |
      deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    create: yes

- name: Update APT cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker and containerd
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Start Docker and containerd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - docker
    - containerd

- name: Configure containerd
  ansible.builtin.shell:
    cmd: containerd config default | tee /etc/containerd/config.toml

- name: Change containerd config
  ansible.builtin.shell:
    cmd: sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

- name: Reload systemd manager configuration
  ansible.builtin.command:
    cmd: systemctl daemon-reload

- name: Restart containerd service
  ansible.builtin.systemd:
    name: containerd
    state: restarted

- name: Add Kubernetes apt-key
  ansible.builtin.shell:
    cmd: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes' APT repository
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /'
    create: yes

- name: Update APT cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Kubernetes components
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Hold Kubernetes packages
  ansible.builtin.shell:
    cmd: apt-mark hold kubelet kubeadm kubectl

- name: Enable and start kubelet service
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: started